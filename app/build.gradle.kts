import java.util.*

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.jvm)

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

val properties = Properties()
val propertiesFile = project.rootProject.file("gradle-local.properties")
if (propertiesFile.exists()) {
    properties.load(propertiesFile.inputStream())
}

val nexusUsername: String = if(propertiesFile.exists())  properties.getProperty("NEXUS_USERNAME") else System.getenv("MAVEN_NEXUS_USER_MIA")
val nexusPassword: String = if (propertiesFile.exists()) properties.getProperty("NEXUS_PASSWORD") else System.getenv("MAVEN_NEXUS_TOKEN_MIA")

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url=uri("https://nexus.mia-platform.eu/repository/maven-release-internal/")
        credentials {
            username=nexusUsername
            password=nexusPassword
        }
        content {
            includeGroup("eu.mia-platform.crud-sql.library")
        }
        maven {
            url=uri("https://nexus.mia-platform.eu/repository/maven-internal-snapshot/")
            credentials {
                username=nexusUsername
                password=nexusPassword
            }
            content {
                includeGroup("eu.mia-platform.crud-sql.library")
            }
        }
    }
}

dependencies {
    implementation(libs.kotlinx.coroutines.core)
    // Use the Kotlin JUnit 5 integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")

    // Use the JUnit 5 integration.
    testImplementation(libs.junit.jupiter.engine)
    testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.9.2")

    // Crud sql library
    implementation(libs.crud.sql.library)

    // Add driver dependency here
    // ...
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

application {
    // Define the main class for the application.
    mainClass.set("eu.miaplatform.template.crud.AppKt")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
